# Default values for podsync.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: tdeutsch/podsync
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

configuration:
  # The config.toml template contents
  template: ""

  # The template variables to use
  # Will be used to replace values in configTemplate
  env: []
  #  - name: PODSYNC_YOUTUBE_KEY
  #    valueFrom:
  #      secretKeyRef:
  #        name: youtube-api-key
  #        key: apiKey

  # File name of a shell script to load additional template environment variables from.
  # This is useful when using Vault - the initContainer will first `source` the file you
  # provide to load env variables, then it will run `envsubst` on the template with both
  # the variables you specify in env and the variables from this file.
  envInjectSource: ""
  # "/vault/secrets/config"

# Persistence for data such as downloaded video content
persistence:
  # If enabled, a Persistent Volume Claim will either be created or used.
  # If not enabled, just uses an emptyDir.
  enabled: false

  # Use an existing Persistent Volume Claim. If empty string (default), then a new one will be generated.
  existingClaim: ""

  # Access modes for the generated Persistent Volume Claim.
  accessModes:
    - ReadWriteOnce

  # Annotations for the generated Persistent Volume Claim.
  annotations: {}

  # The size of the generated Persistent Volume Claim. Defaults to 10Gi
  size: 10Gi

  # The storage class for the generated Persistent Volume Claim. If empty string (default), then the default provisioner will be used.
  storageClass: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: chart-example.local
  paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
