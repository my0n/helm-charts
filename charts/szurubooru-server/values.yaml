# Default values for szurubooru-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: szurubooru/server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Configuration via the config.yaml
# See https://github.com/rr-/szurubooru/blob/master/server/config.yaml.dist for more details.
configuration:
  enabled: true
  # Template for contents of the configuration file. Autopopulated with env variables from `configuration.templateEnv`.
  template: ""
    # name: My Self-Hosted Szurubooru
    # secret: ${SZURUBOORU_SECRET}
    # contact_email: example.examplerson@example.com
  templateEnv: []
    #  - name: SZURUBOORU_SECRET
    #    valueFrom:
    #      secretKeyRef:
    #        name: szurubooru-secret
    #        key: secret

# Persistence for server data
persistence:
  # If enabled, a Persistent Volume Claim will either be created or used.
  # If not enabled, just uses an emptyDir.
  enabled: false
  # Use an existing Persistent Volume Claim. If empty string (default), then a new one will be generated.
  existingClaim: ""
  # Access modes for the generated Persistent Volume Claim.
  accessModes:
    - ReadWriteOnce
  # Annotations for the generated Persistent Volume Claim.
  annotations: {}
  # The size of the generated Persistent Volume Claim. Defaults to 10Gi
  size: 10Gi
  # The storage class for the generated Persistent Volume Claim. If empty string (default), then the default provisioner will be used.
  storageClass: ""

postgres:
  # PostgreSQL database. Sets POSTGRES_DB on the server pod.
  db: szurubooru
  # PostgreSQL host. Sets POSTGRES_HOST on the server pod.
  host: ""
  # PostgreSQL port. Sets POSTGRES_PORT on the server pod.
  port: 5432
  # PostgreSQL username (overrides `server.postgres.userSecret`). Sets POSTGRES_USER on the server pod.
  user: ""
  # Existing secret for the PostgreSQL username. Sets POSTGRES_USER on the server pod.
  userSecret: {}
    # name: szurubooru-postgres-credentials
    # key: user
  # PostgreSQL password (overrides `server.postgres.passwordSecret`). Sets POSTGRES_PASSWORD on the server pod.
  password: ""
  # Existing secret for the PostgreSQL password. Sets POSTGRES_PASSWORD on the server pod.
  passwordSecret: {}
    # name: szurubooru-postgres-credentials
    # key: password
  # Enable verbose SQL logs. Sets LOG_SQL on the server pod.
  verboseLogs: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 6666

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: chart-example.local
  path: /
  pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
